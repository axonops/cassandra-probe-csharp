name: Build and Test

on:
  push:
    branches: [ main, develop ]
    tags-ignore:
      - '*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore
      
    - name: Test Core
      run: dotnet test tests/CassandraProbe.Core.Tests --no-build --verbosity normal
      
    - name: Test Services
      run: dotnet test tests/CassandraProbe.Services.Tests --no-build --verbosity normal
      
    - name: Test Actions
      run: dotnet test tests/CassandraProbe.Actions.Tests --no-build --verbosity normal
      
    - name: Test Scheduling
      run: dotnet test tests/CassandraProbe.Scheduling.Tests --no-build --verbosity normal
      
    - name: Test Logging
      run: dotnet test tests/CassandraProbe.Logging.Tests --no-build --verbosity normal
      
    - name: Test CLI
      run: dotnet test tests/CassandraProbe.Cli.Tests --no-build --verbosity normal
  
  sbom:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    
    - name: Install CycloneDX
      run: dotnet tool install --global CycloneDX
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Generate SBOM
      run: |
        # Generate JSON SBOM
        dotnet CycloneDX src/CassandraProbe.Cli/CassandraProbe.Cli.csproj -f json -o .
        # Generate XML SBOM
        dotnet CycloneDX src/CassandraProbe.Cli/CassandraProbe.Cli.csproj -f xml -o .
        # Find the generated files
        echo "Finding generated SBOM files:"
        find . -name "*.json" -o -name "*.xml" | grep -E "(bom|sbom)" || true
        # Check if directories were created
        if [ -d "json" ]; then
          echo "JSON directory exists, moving bom.json"
          mv json/bom.json ./sbom.json || true
        fi
        if [ -d "xml" ]; then
          echo "XML directory exists, moving bom.xml"
          mv xml/bom.xml ./sbom.xml || true
        fi
        ls -la *.json *.xml || true
    
    - name: Upload SBOM
      uses: actions/upload-artifact@v4
      with:
        name: sbom-latest
        path: |
          sbom.json
          sbom.xml
      
  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
        
    - name: Publish Windows
      run: dotnet publish src/CassandraProbe.Cli -c Release -r win-x64 --self-contained -p:PublishSingleFile=true -o ./artifacts/windows
      
    - name: Publish Linux
      run: dotnet publish src/CassandraProbe.Cli -c Release -r linux-x64 --self-contained -p:PublishSingleFile=true -o ./artifacts/linux
      
    - name: Publish macOS (Intel)
      run: dotnet publish src/CassandraProbe.Cli -c Release -r osx-x64 --self-contained -p:PublishSingleFile=true -o ./artifacts/osx-x64
      
    - name: Publish macOS (ARM64)
      run: dotnet publish src/CassandraProbe.Cli -c Release -r osx-arm64 --self-contained -p:PublishSingleFile=true -o ./artifacts/osx-arm64
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: cassandra-probe-binaries
        path: ./artifacts/