name: Build Release on Tag

on:
  push:
    tags:
      - '*'

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.runtime }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            runtime: linux-x64
            executable: cassandra-probe
          - os: windows-latest
            runtime: win-x64
            executable: cassandra-probe.exe
          - os: macos-latest
            runtime: osx-x64
            executable: cassandra-probe
          - os: macos-latest
            runtime: osx-arm64
            executable: cassandra-probe
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    
    - name: Get tag name
      id: tag
      shell: bash
      run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Restore
      run: dotnet restore
    
    - name: Test
      run: dotnet test --configuration Release --filter "FullyQualifiedName!~IntegrationTests"
    
    - name: Publish
      run: dotnet publish src/CassandraProbe.Cli --configuration Release --runtime ${{ matrix.runtime }} --self-contained true --output ./artifacts -p:PublishSingleFile=true -p:PublishTrimmed=true -p:DebugType=None -p:DebugSymbols=false
    
    - name: Set executable permissions (Unix)
      if: runner.os != 'Windows'
      run: chmod +x ./artifacts/${{ matrix.executable }}
    
    - name: Create archive (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        Compress-Archive -Path ./artifacts/${{ matrix.executable }} -DestinationPath cassandra-probe-${{ steps.tag.outputs.TAG_NAME }}-${{ matrix.runtime }}.zip
    
    - name: Create archive (Unix)
      if: runner.os != 'Windows'
      run: |
        tar -czf cassandra-probe-${{ steps.tag.outputs.TAG_NAME }}-${{ matrix.runtime }}.tar.gz -C ./artifacts ${{ matrix.executable }}
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: cassandra-probe-${{ matrix.runtime }}
        path: cassandra-probe-${{ steps.tag.outputs.TAG_NAME }}-${{ matrix.runtime }}.*
        retention-days: 1

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Get tag name
      id: tag
      run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts
    
    - name: Prepare release files
      run: |
        mkdir -p release
        mv ./artifacts/*/* ./release/
        cd release
        sha256sum * > SHA256SUMS
        ls -la
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ steps.tag.outputs.TAG_NAME }}
        draft: false
        prerelease: false
        generate_release_notes: true
        files: |
          release/*
        body: |
          ## Cassandra Probe ${{ steps.tag.outputs.TAG_NAME }}
          
          ### Standalone Executables
          
          These are self-contained executables that include the .NET runtime. No installation required.
          
          | Platform | File | Description |
          |----------|------|-------------|
          | Windows x64 | `cassandra-probe-${{ steps.tag.outputs.TAG_NAME }}-win-x64.zip` | 64-bit Windows executable |
          | Linux x64 | `cassandra-probe-${{ steps.tag.outputs.TAG_NAME }}-linux-x64.tar.gz` | 64-bit Linux executable |
          | macOS x64 | `cassandra-probe-${{ steps.tag.outputs.TAG_NAME }}-osx-x64.tar.gz` | Intel Mac executable |
          | macOS ARM64 | `cassandra-probe-${{ steps.tag.outputs.TAG_NAME }}-osx-arm64.tar.gz` | Apple Silicon Mac executable |
          
          ### Quick Start
          
          **Linux/macOS:**
          ```bash
          tar -xzf cassandra-probe-*.tar.gz
          chmod +x cassandra-probe
          ./cassandra-probe --help
          ```
          
          **Windows:**
          ```powershell
          Expand-Archive cassandra-probe-*.zip
          .\cassandra-probe.exe --help
          ```
          
          ### Verify Download
          
          Check file integrity with SHA256SUMS:
          ```bash
          sha256sum -c SHA256SUMS
          ```